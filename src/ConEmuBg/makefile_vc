
.SILENT:

NAME=ConEmuBg
EXT=dll
X64SUFF=.x64
RELEASEDIR=..\..\Release\plugins\ConEmu\Background
NEEDENTRY = 1
USE_PDB = 1
NEEDDEFLIB = 1

!include ../makefile_vc_defs

ALL: dirs build release

USERLIBS = kernel32.lib user32.lib gdi32.lib advapi32.lib ole32.lib version.lib

DEF_FILE = export.def


!ifndef DEBUG
CPP_OPT=$(CPP_OPT) /DNDEBUG /DHIDE_TODO
!else
CPP_OPT=$(CPP_OPT) /DDEBUG /D_DEBUG
!endif

!if "$(USE_PDB)" == "1"
CPP_OPT=$(CPP_OPT) /Fd$(PDB)
CPP_DEBUG=/Zi
LINK_DEBUG=/MAP:"$(MAP)" /DEBUG /PDB:$(PDB)
!else
CPP_DEBUG=
LINK_DEBUG=/MAP:"$(MAP)" /PDB:$(PDB)
!endif


!ifndef DEBUG
CPP_OPT=$(CPP_OPT) /O1i /DCONEMU_MINIMAL
!else
CPP_OPT=$(CPP_OPT) /Od /DCONEMU_MINIMAL
!endif



!ifdef AMD64
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
#COMMONLIB = ../common/libCRT64.lib
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!elseif defined(IA64)
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
#COMMONLIB = ../common/libCRTIA64.lib
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!else
#COMMONLIB = ../common/libCRT.lib
#../pvdCRT.lib
!ifdef CPP_UNALIGN
CPP_ALIGN=/Zp1
!endif
# /I"$(COMMON)"
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
ULOUT=-Tpd -Re
LINK_MACHINE = /MACHINE:X86
!endif
CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(INTDIR)\\"


LIBS = $(CRTLIB) $(USERLIBS)



LINK_FLAGS=/nologo /SUBSYSTEM:WINDOWS /DYNAMICBASE /dll /RELEASE $(LINK_MACHINE) $(NOWIN98) $(ENV_LIB_OPT) /def:"$(DEF_FILE)" /out:"$(OUTFULLNAME)" $(LINK_DEBUG)


CPPFLAGS = $(MP) $(CPP_PROJ) $(CPP_DEBUG) $(CPP_OPT)


!include ../makefile_vc_link


.PHONY: build
build: "$(OUTFULLNAME)"


$(RES): $(RC_NAME).rc
	@$(RC) $(ENV_INC_OPT) $(RC_WIDE) /fo"$(RES)" $(RC_NAME).rc




################

LINK_OBJS = \
$(INTDIR)\ConEmuBg.obj \
$(INTDIR)\ConEmuBg995.obj \
$(INTDIR)\ConEmuBg1900.obj \
$(INTDIR)\ConEmuBg2800.obj \
$(INTDIR)\ConEmuBgA.obj \
$(INTDIR)\MAssert.obj \
$(INTDIR)\Memory.obj \
$(INTDIR)\MSectionSimple.obj \
$(INTDIR)\MStrDup.obj \
$(INTDIR)\MStrSafe.obj \
$(INTDIR)\WThreads.obj


################
#LINK_OBJS begin

$(INTDIR)\ConEmuBg.obj: ConEmuBg.cpp ../common/Common.h ConEmuBg.h ConEmuBg_Lang.h

$(INTDIR)\ConEmuBg1900.obj: ConEmuBg1900.cpp ../common/Common.h ConEmuBg.h ConEmuBg_Lang.h

$(INTDIR)\ConEmuBg2800.obj: ConEmuBg2800.cpp ../common/Common.h ConEmuBg.h ConEmuBg_Lang.h

$(INTDIR)\ConEmuBg995.obj: ConEmuBg995.cpp ../common/Common.h ConEmuBg.h ConEmuBg_Lang.h

$(INTDIR)\ConEmuBgA.obj: ConEmuBgA.cpp ../common/Common.h ConEmuBg.h ConEmuBg_Lang.h

$(INTDIR)\MAssert.obj: ../common/MAssert.cpp

$(INTDIR)\Memory.obj: ../common/Memory.cpp

$(INTDIR)\MSectionSimple.obj: ../common/MSectionSimple.cpp ../common/MSectionSimple.h

$(INTDIR)\MStrDup.obj: ../common/MStrDup.cpp ../common/MStrDup.h

$(INTDIR)\MStrSafe.obj: ../common/MStrSafe.cpp

$(INTDIR)\WThreads.obj: ../common/WThreads.cpp

#LINK_OBJS end
##############


"$(OUTFULLNAME)": $(LINK_OBJS) $(RES) $(LINK_DEP)
	@echo $(CLR_BRN)linking $@ :: $(LINK_FLAGS) $(LIBS)$(CLR_STD)
	@$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES)
<<
