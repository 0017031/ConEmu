
.SILENT:

NAME=ConEmuLn
EXT =dll
RELEASEDIR=..\..\Release\plugins\ConEmu\Lines
NEEDENTRY = 1
USE_PDB = 1
NEEDDEFLIB = 1

!include ../makefile_vc_defs

USERLIBS = kernel32.lib user32.lib gdi32.lib advapi32.lib version.lib

DEF_FILE = export.def

!if "$(CPU)" == "X86"
OUTNAME = ConEmuLn
!else
OUTNAME = ConEmuLn.x64
!endif                   


!ifndef DEBUG
CPP_OPT=/DNDEBUG /O1i /Fd$(PDB) /DHIDE_TODO
LINK_DEBUG=/map:"$(MAP)" 
CPP_DEBUG=
!else
CPP_OPT=/DDEBUG /Od /Fd$(PDB)
LINK_DEBUG=/debug /map:"$(MAP)" /pdb:"$(PDB)"
CPP_DEBUG=/Zi
!endif

!ifdef AMD64
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
#COMMONLIB = ../common/libCRT64.lib
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!elseif defined(IA64)
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
#COMMONLIB = ../common/libCRTIA64.lib
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!else
#COMMONLIB = ../common/libCRT.lib
#../pvdCRT.lib
!ifdef CPP_UNALIGN
CPP_ALIGN=/Zp1
!endif
# /I"$(COMMON)"
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /D_WIN32_WINNT=0x0500 $(USERCPP)
ULOUT=-Tpd -Re
LINK_MACHINE = /MACHINE:X86
!endif
CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(OBJDIR)\\"

LIBS = $(CRTLIB) $(USERLIBS)


LINK_FLAGS=/nologo /SUBSYSTEM:WINDOWS /DYNAMICBASE /dll /RELEASE $(LINK_MACHINE) $(NOWIN98) $(ENV_LIB_OPT) /def:"$(DEF)" /out:"$(OUTFULLNAME)" $(LINK_DEBUG)


CPPFLAGS = $(MP) $(CPP_PROJ) $(CPP_DEBUG) $(CPP_OPT)


!include ../makefile_vc_link


build: "$(OUTFULLNAME)"

"$(OUTFULLNAME)": $(LINK_OBJS) $(RES) $(LINK_DEP)
	@echo $(CLR_BRN)linking $@ :: $(LINK_FLAGS) $(LIBS)$(CLR_STD)
	$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES)
<<


$(RES): $(RC_NAME).rc
	@$(RC) $(ENV_INC_OPT) $(RC_WIDE) /fo"$(RES)" $(RC_NAME).rc




##############

LINK_OBJS = \
$(INTDIR)\WThreads.obj \
$(OBJDIR)\ConEmuLn.obj \
$(OBJDIR)\ConEmuLn995.obj \
$(OBJDIR)\ConEmuLn1900.obj \
$(OBJDIR)\ConEmuLn2800.obj \
$(OBJDIR)\ConEmuLnA.obj \
$(OBJDIR)\MAssert.obj \
$(OBJDIR)\Memory.obj \
$(OBJDIR)\MStrSafe.obj


################
#LINK_OBJS begin

$(OBJDIR)\ConEmuLn.obj: ConEmuLn.cpp ../common/Common.h ConEmuLn.h ConEmuLn_Lang.h

$(OBJDIR)\ConEmuLn995.obj: ConEmuLn995.cpp ../common/Common.h ConEmuLn.h ConEmuLn_Lang.h

$(OBJDIR)\ConEmuLn1900.obj: ConEmuLn1900.cpp ../common/Common.h ConEmuLn.h ConEmuLn_Lang.h

$(OBJDIR)\ConEmuLn2800.obj: ConEmuLn2800.cpp ../common/Common.h ConEmuLn.h ConEmuLn_Lang.h

$(OBJDIR)\ConEmuLnA.obj: ConEmuLnA.cpp ../common/Common.h ConEmuLn.h ConEmuLn_Lang.h

$(OBJDIR)\MAssert.obj: ../common/MAssert.cpp

$(OBJDIR)\Memory.obj: ../common/Memory.cpp

$(OBJDIR)\MStrSafe.obj: ../common/MStrSafe.cpp

#LINK_OBJS end
##############
