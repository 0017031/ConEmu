NAME = ConEmu
SRCS =  BaseDragDrops.cpp \
		ConEmu.cpp        \
		DragDrop.cpp      \
		Options.cpp       \
		ProgressBars.cpp  \
		setconsoleinfo.cpp \
		TabBar.cpp         \
		VirtualConsole.cpp 

USERLIBS = -lversion

#The following variables can be set by the user:
#
#NAME - the name of the plugin (project name|dll name).
#
#EXT - extension of the plugin executable (dll by default).
#
#ADDOUTDIR - you can set it to /dir if the target folder for the plugin
#            is a folder inside the default target folder.
#            This is used in multiarc for building *.fmt.
#
#USERCPP - user defined switches for the compiler (added after the default
#          ones).
#
#USERLIBS - specify additional libs you need in the form -llib
#           (added after the default ones).
#
#USERLIBSFIRST - same as USERLIBS but added before the default libs
#                (libraries order is important for gcc).
#
#USERRC - user defined switches for windres
#
#NEEDENTRY - set if you want to disable the -nostartfiles link flag
#
#NEEDDEFLIB - set if you want to disable the -nodefaultlibs link flag
#
#EXCLUDECRT - set if you do not want to link with common/crt lib.
#
#SRCS - a list of the *.cpp source files.
#
#DOCS - a list of additional files that need to copied to the target folder.
#
#WIDE - set for a unicode build
#

WIDE = 1
DIRSURF = W
RCWIDE = -D UNICODE -D _UNICODE
CXXWIDE = -D UNICODE -D _UNICODE
CCWIDE = -D UNICODE -D _UNICODE

OBJDIR = ../../gcc/conemu
REOBJDIR = \.\.\/\.\.\/gcc\/conemu
EXEDIR = ../..
COMMON = ../common
COMINC = $(COMMON)
EXT = exe
EXENAME = $(NAME).$(EXT)
EXEFULLNAME = $(EXEDIR)/$(EXENAME)
#DEF = export.gcc.def
RC_NAME = Resource.rc
RES = $(OBJDIR)/$(NAME).res.o

NOSTART = -nostartfiles
ifdef NEEDENTRY
NOSTART = 
endif

NODEFLIBS = -nodefaultlibs
ifdef NEEDDEFLIB
NODEFLIBS = 
endif

COMMONLIB = -L $(COMMON) -lCRT
ifdef EXCLUDECRT
COMMONLIB = 
endif

CXX = g++
CC = gcc
#DLLTOOL = dlltool
RM = rm -f
CP = cp -f
M4 = m4 -P
MV = mv -f
MKDIR = mkdir -p
WINDRES = windres
AR = ar
RANLIB = ranlib
CXXFLAGS = -mno-cygwin -I $(COMMON) -I $(COMINC) -Wall -Os -funsigned-char -fomit-frame-pointer -fstrict-aliasing -fno-rtti -fno-exceptions $(CXXWIDE) $(USERCPP) -D _WIN32_WINNT=0x502
CCFLAGS = -mno-cygwin -I $(COMMON) -I $(COMINC) -Wall -Os -funsigned-char -fomit-frame-pointer -fstrict-aliasing -fno-exceptions $(CCWIDE) $(USERCPP)
LNKFLAGS = -mno-cygwin -mdll -s $(NOSTART) $(NODEFLIBS) -lgcc $(USERLIBSFIRST) $(COMMONLIB) -luser32 -lkernel32 -ladvapi32 -lshell32 $(USERLIBS)
RCFLAGS = -I $(COMINC) $(RCWIDE) $(USERRC)

OBJS = $(patsubst %.cpp,$(OBJDIR)/%.o,$(filter %.cpp,$(SRCS))) $(RES)
ifndef DISABLEAUTODEPS
DEPS = $(patsubst %.cpp,$(OBJDIR)/%.d,$(filter %.cpp,$(SRCS)))
endif
MAP = $(patsubst %.$(EXT),%.map,$(EXEFULLNAME))



all: $(EXEFULLNAME)

ifndef DISABLEAUTODEPS
$(OBJDIR)/%.d: %.cpp
	@echo making depends for $<
	@$(MKDIR) -p $(@D)
	@$(SHELL) -ec '$(CXX) -c -MM $(CXXFLAGS) $< \
                | sed '\''s/\($*\)\.o[ :]*/$(REOBJDIR)\1.o $(REOBJDIR)\1.d: /g'\'' > $@; [ -s $@ ] || $(RM) $@'
endif

$(OBJDIR)/%.o: %.cpp
	@echo compiling $<
	@$(MKDIR) -p $(@D)
	@$(CXX) $(CXXFLAGS) -c -o $@ $<

$(RES): $(RC_NAME)
	@echo compiling $<
	@$(MKDIR) -p $(@D)
	@$(WINDRES) $(RCFLAGS) -i $< -o $@

$(EXEFULLNAME): $(OBJS) $(DEF)
	@echo linking $@
	@$(CXX) -o $(EXENAME) $(OBJS) $(LNKFLAGS)
	@$(MV) $(EXENAME) $(EXEDIR)
#$(EXEFULLNAME): $(OBJS) $(DEF)
#	@echo linking $@
#	@$(MKDIR) -p $(@D)
#	@$(CXX) -mdll -o $(EXENAME) -Xlinker --base-file -Xlinker $(DLLNAME).base $(OBJS) $(LNKFLAGS)
#	@$(DLLTOOL) --dllname $(DLLNAME) --base-file $(DLLNAME).base --output-exp $(DLLNAME).exp --def $(DEF)
#	@$(CXX) -mdll  -o $(EXENAME) $(OBJS) $(EXENAME).exp $(LNKFLAGS) -Xlinker -Map -Xlinker $(MAP)
#	@$(MV) $(DLLNAME) $(DLLDIR)
#	@$(RM) $(DLLNAME).base
#	@$(RM) $(DLLNAME).exp
#ifdef DOCS
#	@$(CP) $(DOCS) $(EXEDIR)
#endif

ifndef DISABLEAUTODEPS
-include $(DEPS)
endif
