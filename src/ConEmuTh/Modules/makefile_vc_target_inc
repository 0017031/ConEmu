ALL: dirs $(INSTALL) $(OUTFULLNAME) clean

LINK_OBJS = $(CRT_FIX_OBJS) $(LINK_OBJS) $(OBJDIR)\MAssert.obj $(OBJDIR)\Memory.obj $(OBJDIR)\WThreads.obj

$(OUTFULLNAME) : $(LINK_OBJS) $(RES) $(LINK_DEP)
	@echo $(CLR_BRN)linking $@$(CLR_STD)
	@echo/  $(LINK_FLAGS) $(LIBS)
	$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES)
<<

!ifndef __MAKE__
.cpp{$(OBJDIR)}.obj::
	@$(CC) @<<
	$(CPPFLAGS) $<
<<
{../}.cpp{$(OBJDIR)}.obj::
	$(CC) @<<
	$(CPPFLAGS) $<
<<
{../../../common/}.cpp{$(OBJDIR)}.obj::
	$(CC) @<<
	$(CPPFLAGS) $<
<<
!else
.cpp{$(OBJDIR)}.obj:
	@$(CC) $(CPPFLAGS) { $< } 

{../}.cpp{$(OBJDIR)}.obj:
	@$(CC) $(CPPFLAGS) { $< } 

{../../common/}.cpp{$(OBJDIR)}.obj:
	@$(CC) $(CPPFLAGS) { $< } 
!endif

$(RES): $(RC_NAME).rc
	@$(RC) /I"$(COMINC)" $(ENV_INC_OPT) $(RC_WIDE) /fo"$(RES)" $(RC_NAME).rc

.PHONY: dirs
dirs:
!ifdef INSTALL
	@if not exist "$(WORKDIR)\$(NULL)" mkdir "$(WORKDIR)"
!endif
	@if not exist "$(OBJDIR)\$(NULL)" mkdir "$(OBJDIR)"
	@if not exist "$(OUTDIR)\$(NULL)" mkdir "$(OUTDIR)"

.PHONY: clean
clean:
!if defined(FIXOSVER)
	@echo $(CLR_BRN)downgrading required OS version to $(FIXOSVER)$(CLR_STD)
	@editbin /SUBSYSTEM:$(SUBSYSTEM),$(FIXOSVER) /osversion:$(FIXOSVER) $(OUTFULLNAME) > "$(WORKDIR)\editbin.log"
!endif
	@echo $(CLR_MOD)Copying release files$(CLR_STD)
	@if not exist "$(RELEASEDIR)\$(NULL)" mkdir "$(RELEASEDIR)"
	@echo moving `$(OUTFULLNAME)` to `$(RELEASEDIR)`
	@move "$(OUTFULLNAME)" $(RELEASEDIR) > nul
	@echo moving `$(PDB)` to `$(RELEASEDIR)\$(DLLNAME).pdb`
	@move "$(PDB)" "$(RELEASEDIR)\$(DLLNAME).pdb" > nul
	@echo moving `$(MAP)` to `$(RELEASEDIR)\$(DLLNAME).map`
	@move "$(MAP)" "$(RELEASEDIR)\$(DLLNAME).map" > nul
	@cmd /c del /Q $(OBJDIR)\*.* > nul
	@cmd /c del /Q $(OUTDIR)\*.* > nul
	@rd $(OBJDIR) > nul
	@rd $(OUTDIR) > nul
