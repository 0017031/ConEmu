
.SILENT:

NAME=ConEmuDw
EXT =dll
X64SUFF=64
RELEASEDIR=..\..\Release\ConEmu
NEEDENTRY=1
USE_PDB = 1
NEEDDEFLIB = 1
DEF_FILE = export.def

!include ../makefile_vc_defs

ALL: dirs build release

USERLIBS = kernel32.lib user32.lib gdi32.lib version.lib comdlg32.lib


CPPWINVER=/D_WIN32_WINNT=0x0500

BASEADDRESS=/DYNAMICBASE

!ifndef DEBUG
CPP_OPT=/DNDEBUG /O1i /Fd$(PDBNAME) /DHIDE_TODO /DCRTPRINTF /DCRTSTARTUP /DCONEMU_MINIMAL
#/DCRTSTARTUP
!else
CPP_OPT=/DDEBUG /Od /Fd$(PDBNAME) /DCRTPRINTF /DCONEMU_MINIMAL
#/DCRTSTARTUP
!endif

!ifdef AMD64
#COMMONLIB = ../common/libCRT64.lib
#../common/chkstk64.obj
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS $(USERCPP)
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!elseif defined(IA64)
#COMMONLIB = ../common/libCRTIA64.lib
#../common/chkstkIA64.obj
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF /Zp8 /J $(COMPAT64) /GS- /Gr /GR- /EHs-c- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS $(USERCPP)
ULOUT=-Tpd+
LINK_MACHINE = /MACHINE:X64
!else
#COMMONLIB = ../common/libCRT.lib
#../common/chkstk.obj
#../pvdCRT.lib
!ifdef CPP_UNALIGN
CPP_ALIGN=/Zp1
!endif
# /I"$(COMMON)"
CPP_PROJ_NO=/nologo /c /W3 /wd4995 /Gy /GF $(CPP_ALIGN) /J /Gr /GS- /GR- /EHs-c-a- /LD $(ENV_INC_OPT) $(CPP_WIDE) /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS $(CPPWINVER) $(USERCPP)
ULOUT=-Tpd -Re
LINK_MACHINE = /MACHINE:X86
!endif
CPP_PROJ=$(CPP_PROJ_NO) /Fo"$(INTDIR)\\"


LIBS = $(CRTLIB) $(USERLIBS)




!ifndef USE_PDB
CPP_DEBUG=
!else
CPP_DEBUG=/Zi
!endif


#/merge:.rdata=.text /SUBSYSTEM:WINDOWS
#/ENTRY:_DllMainCRTStartup
LINK_FLAGS=/nologo /DLL /RELEASE $(BASEADDRESS) $(LINK_MACHINE) $(NOWIN98) $(ENV_LIB_OPT) /def:"$(DEF_FILE)" /out:"$(OUTFULLNAME)" $(LINK_DEBUG)


CPPFLAGS = $(MP) $(CPP_PROJ) $(CPP_DEBUG) $(CPP_OPT)




!include ../makefile_vc_link


.PHONY: build
build: old_clean "$(OUTFULLNAME)"


$(RES): $(RC_NAME).rc
	@$(RC) $(ENV_INC_OPT) $(RC_WIDE) /fo"$(RES)" $(RC_NAME).rc


old_clean:
#Remove from old locations
	@if exist "$(RELEASEDIR)\..\$(OUTNAME).dll" del "$(RELEASEDIR)\..\$(OUTNAME).dll" > nul
	@if exist "$(RELEASEDIR)\..\$(OUTNAME).map" del "$(RELEASEDIR)\..\$(OUTNAME).map" > nul
	@if exist "$(RELEASEDIR)\..\$(OUTNAME).pdb" del "$(RELEASEDIR)\..\$(OUTNAME).pdb" > nul


################

LINK_OBJS = \
	$(INTDIR)\CEStr.obj \
	$(INTDIR)\CmdLine.obj \
	$(INTDIR)\ConEmuDw.obj \
	$(INTDIR)\Common.obj \
	$(INTDIR)\ConEmuCheck.obj \
	$(INTDIR)\ConsoleRead.obj \
	$(INTDIR)\HkFunc.obj \
	$(INTDIR)\MAssert.obj \
	$(INTDIR)\MStrDup.obj \
	$(INTDIR)\Memory.obj \
	$(INTDIR)\MSecurity.obj \
	$(INTDIR)\MStrSafe.obj \
	$(INTDIR)\WObjects.obj \
	$(INTDIR)\WThreads.obj


################
#LINK_OBJS begin

$(INTDIR)\CEStr.obj: ../common/CEStr.cpp ../common/CEStr.h

$(INTDIR)\CmdLine.obj: ../common/CmdLine.cpp ../common/CmdLine.h

$(INTDIR)\ConEmuDw.obj: ConEmuDw.cpp

$(INTDIR)\Common.obj: ../common/Common.cpp

$(INTDIR)\ConEmuCheck.obj: ../common/ConEmuCheck.cpp

$(INTDIR)\ConsoleRead.obj: ../common/ConsoleRead.cpp ../common/ConsoleRead.h

$(INTDIR)\HkFunc.obj: ../common/HkFunc.cpp ../common/HkFunc.h

$(INTDIR)\MAssert.obj: ../common/MAssert.cpp

$(INTDIR)\Memory.obj: ../common/Memory.cpp

$(INTDIR)\MSecurity.obj: ../common/MSecurity.cpp

$(INTDIR)\MStrDup.obj: ../common/MStrDup.cpp ../common/MStrDup.h

$(INTDIR)\MStrSafe.obj: ../common/MStrSafe.cpp

$(INTDIR)\WObjects.obj: ../common/WObjects.cpp

$(INTDIR)\WThreads.obj: ../common/WThreads.cpp

#LINK_OBJS end
##############



"$(OUTFULLNAME)": $(LINK_OBJS) $(RES) $(LINK_DEP)
	@echo $(CLR_BRN)linking $@ :: $(LINK_FLAGS) $(LIBS)$(CLR_STD)
	$(LNK) @<<
	$(LINK_FLAGS) $(LIBS) $(LINK_OBJS) $(RES)
<<
