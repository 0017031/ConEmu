
.SILENT:

NAME=ConEmuC
EXT=exe
RELEASEDIR=..\..\Release\ConEmu
NEEDDEFLIB = 1
USE_PDB = 1

!include ../makefile_vc_defs

DEF_FILE = .\$(NAME).def

!if "$(CPU)" == "X86"
OUTNAME=ConEmuC
!else
OUTNAME=ConEmuC64
!endif

USERLIBS = kernel32.lib user32.lib shell32.lib

RES_FILE = "$(OBJDIR)\$(NAME).res"





LINK_LIBS=$(CRTLIB) $(USERLIBS)

DEFINES=\
	/DCONEMU_MINIMAL \
	/DUNICODE \
	/D_UNICODE \
	/D$(USEDEBUG) \
	/DHIDE_TODO \
	/DCRTPRINTF \
	/D_CRT_SECURE_NO_WARNINGS \
	/D_CRT_NON_CONFORMING_SWPRINTFS \
	/DUSE_SEH

# common
CPPFLAGS=/nologo $(MP) /W3 $(FARSYSLOG) /EHs-c- $(DEFINES) /GS- /GR- /Gy /GF /Fo"$(OBJDIR)/" /Fd"$(OBJDIR)/" /J /c /FAcs /Fa"$(CODDIR)/"
LINKFLAGS=/nologo /subsystem:console /def:"$(DEF_FILE)" /out:"$(OUTDIR)\$(OUTNAME).exe" /map:"$(OUTDIR)\$(OUTNAME).map" /RELEASE /nxcompat /DEBUG /pdb:"$(OUTDIR)\$(OUTNAME).pdb"
RFLAGS=$(RCWIN64) /l 0x409 /fo"$(RES_FILE)" /d "SELF_MANIFEST" /d $(USEDEBUG)

# config-cpecific
!ifdef DEBUG
CPPFLAGS=$(CPPFLAGS) /Od /Zi
LINKFLAGS=$(LINKFLAGS)
!else
CPPFLAGS=$(CPPFLAGS) /O2 /Oy-
!ifndef NO_RELEASE_PDB
CPPFLAGS=$(CPPFLAGS) /Zi
LINKFLAGS=$(LINKFLAGS)
!endif
LINKFLAGS=$(LINKFLAGS) /incremental:no /OPT:REF /OPT:ICF
!endif

# platform-cpecific
!ifdef X86
CPPFLAGS=$(CPPFLAGS) /Zp4
LINKFLAGS=$(LINKFLAGS) /machine:i386
!elseifdef AMD64
CPPFLAGS=$(CPPFLAGS) /Zp8 /D_WIN64 /DWIN64
LINKFLAGS=$(LINKFLAGS) /machine:amd64
!elseifdef IA64
CPPFLAGS=$(CPPFLAGS) /Zp8 /D_WIN64 /DWIN64
LINKFLAGS=$(LINKFLAGS) /machine:IA64
!endif

# compiler-cpecific
!if "$(VC)"=="8"
CPPFLAGS=$(CPPFLAGS) /Wp64
LINKFLAGS=$(LINKFLAGS) /opt:nowin98
!else
RFLAGS=$(RFLAGS) 
!endif


!include ../makefile_vc_link

.PHONY: build
build: cppflags dirs "$(OUTFULLNAME)"

$(RES_FILE): $(NAME).rc ..\ConEmu\Version.h
	@echo compiling resource file
	$(RC) $(RFLAGS) $(NAME).rc




################

LINK_OBJS = \
$(INTDIR)\CEStr.obj \
$(INTDIR)\CmdLine.obj \
$(INTDIR)\ConEmuC.obj \
$(INTDIR)\Downloader.obj \
$(INTDIR)\HkFunc.obj \
$(INTDIR)\MAssert.obj \
$(INTDIR)\Memory.obj \
$(INTDIR)\MSectionSimple.obj \
$(INTDIR)\MStrDup.obj \
$(INTDIR)\MStrSafe.obj \
$(INTDIR)\WObjects.obj \
$(INTDIR)\WThreads.obj


################
#LINK_OBJS begin

$(INTDIR)\CEStr.obj: ../common/CEStr.cpp ../common/CEStr.h

$(INTDIR)\CmdLine.obj: ../common/CmdLine.cpp ../common/CmdLine.h

$(INTDIR)\ConEmuC.obj: ConEmuC.cpp

$(INTDIR)\Downloader.obj: Downloader.cpp Downloader.h

$(INTDIR)\HkFunc.obj: ../common/HkFunc.cpp ../common/HkFunc.h

$(INTDIR)\MAssert.obj: ../common/MAssert.cpp

$(INTDIR)\Memory.obj: ../common/Memory.cpp

$(INTDIR)\MSectionSimple.obj: ../common/MSectionSimple.cpp ../common/MSectionSimple.h

$(INTDIR)\MStrDup.obj: ../common/MStrDup.cpp ../common/MStrDup.h

$(INTDIR)\MStrSafe.obj: ../common/MStrSafe.cpp

$(INTDIR)\WObjects.obj: ../common/WObjects.cpp ../common/WObjects.h

$(INTDIR)\WThreads.obj: ../common/WThreads.cpp ../common/WThreads.h

#LINK_OBJS end
##############



"$(OUTFULLNAME)": $(DEF_FILE) $(LINK_OBJS) $(RES_FILE) $(NAME).exe.manifest $(NAME).rc
	@echo $(CLR_BRN)linking $@ :: $(LINKFLAGS) $(LINK_LIBS)$(CLR_STD)
	$(LNK) @<<
	$(LINKFLAGS) $(LINK_OBJS) $(RES_FILE) $(LINK_LIBS)
<<
